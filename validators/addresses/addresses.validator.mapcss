/******************************/
/* addresses.validator.mapcss */
/******************************/

/* mtw addressonbuilding */

way[inside("IT")][building][tag_regex("^addr:*")] {
	throwWarning: tr("{0} together with {1}", "{1.key}", "addr:*");
	group: "MapThisWay (Addresses)";
}

/* mtw namenotcapitalized */

*[inside("IT")][addr:street =~ /^[a-z]/] {
	throwWarning: tr("unusual value of {0}", "{1.key}: iniziale non in maiuscolo");
	group: "MapThisWay (Addresses)";
}

/* mtw numerocivicoerrato */

*[inside("IT")][addr:housenumber][addr:housenumber !~ /^((0|[1-9][0-9]*)([a-z]?|(\/[1-9][0-9]*[a-z]?)|bis|((qua)?ter))(\b rosso\b)?)([;,](0|[1-9][0-9]*([a-z]?|(\/[1-9][0-9]*[a-z]?)|bis|((qua)?ter))(\b rosso\b)?))*$/] {
	throwWarning: tr("unusual value of {0}", "{1.key}: https://wiki.openstreetmap.org/wiki/IT:Addresses#Come_inserire_gli_indirizzi_2");
	group: "MapThisWay (Addresses)";
	assertMatch: "node \"addr:housenumber\"=\"00\"";
	assertMatch: "node \"addr:housenumber\"=\"01\"";
	assertMatch: "node \"addr:housenumber\"=\"a\"";
	assertMatch: "node \"addr:housenumber\"=\"1A\"";
	assertMatch: "node \"addr:housenumber\"=\"1 a\"";
	assertMatch: "node \"addr:housenumber\"=\"1/BIS\"";
	assertMatch: "node \"addr:housenumber\"=\"0/0\"";
	assertMatch: "node \"addr:housenumber\"=\"1 nero\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1a\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1bis\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1ter\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1quater\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1/1\"";
	assertNoMatch: "node \"addr:housenumber\"=\"95/1a\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1 rosso\"";
	assertNoMatch: "node \"addr:housenumber\"=\"0\"";
	assertNoMatch: "node \"addr:housenumber\"=\"0a\"";
	assertMatch: "node \"addr:housenumber\"=\"00,1\"";
	assertMatch: "node \"addr:housenumber\"=\"0,01\"";
	assertMatch: "node \"addr:housenumber\"=\"00;1\"";
	assertMatch: "node \"addr:housenumber\"=\"0;01\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1a,1b,1c\"";
	assertNoMatch: "node \"addr:housenumber\"=\"1a;1b;1c\"";
	assertMatch: "node \"addr:housenumber\"=\"1-3\"";
}

